library(dplyr)
library(ggplot2)
library(statsr)
#load("movies.Rdata")
load("movies.Rdata")
movies %>% ggplot(aes(x=title_type)) + geom_count()
movies %>% ggplot(aes(x=title_type)) + geom_bar()
install.packages('ggthemr')
devtools::install_github('cttobin/ggthemr')
library(ggthemr)
ggthemr('flat dark')
movies %>% ggplot(aes(x=title_type)) + geom_bar()
movies %>% ggplot(aes(x=title_type)) + geom_bar(alpha(0.5))
movies %>% ggplot(aes(x=title_type)) + geom_bar(alpha=0.5)
movies %>% ggplot(aes(x=title_type)) + geom_bar(alpha=0.8)
movies %>% ggplot(aes(x=title_type)) + geom_bar(alpha=0.7)
movies %>% ggplot(aes(x=title_type)) + geom_bar(alpha=0.7) + labs(x="Movie Type", y= "Number of Movies")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_bar(alpha=0.7) + labs(x="Movie Type", y= "Number of Movies")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_bar(alpha=0.4) + labs(x="Movie Type", y= "Number of Movies")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_bar(alpha=0.4) + labs(x="Movie Type", y= "Number of Movies",legend="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_bar(alpha=0.4) + labs(x="Movie Type", y= "Number of Movies",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_histogram(alpha=0.4) + labs(x="Run Time", y= "Number of Movies",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.4) + labs(x="Run Time", y= "Number of Movies",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.4) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.2) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.8) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.7) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.5) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
ggthemr('fresh')
movies %>% ggplot(aes(x=title_type)) + geom_bar(alpha=0.7) + labs(x="Movie Type", y= "Number of Movies")
movies %>% ggplot(aes(x=runtime,fill=title_type)) + geom_density(alpha=0.5) + labs(x="Run Time", y= "Desnity",fill="Movie Type")
mean(movies[movies$title_type=="Documentary"])
movies[movies$title_type=="Documentary"]
?group_by
movies %>% group_by("title_type") %>% summarise(mean_run_time=mean(runtime))
movies %>% group_by("title_type")
movies %>% group_by("title_type") %>% summarise(k=mean(runtime))
by_title <- movies %>% group_by("title_type")
View(by_title)
by_title %>% summarise(runtime=mean(runtime))
movies %>% group_by(title_type) %>% summarise(mean_run_time=mean(runtime))
movies %>% group_by(title_type) %>% summarise(mean_run_time=mean(runtime,na.rm = TRUE))
movies %>% ggplot((x=imdb_rating)) + geom_density()
movies %>% ggplot((x=imdb_rating)) + geom_density()
movies %>% ggplot(aes(x=imdb_rating)) + geom_density()
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_vline(mean(movies$imdb_rating))
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_hline(mean(movies$imdb_rating))
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_hline(5)
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_line(x=5)
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_line(5)
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_vline(xintercept = mean(movies$imdb_rating))
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_vline(xintercept = mean(movies$imdb_rating),color='red',linetype='dashed)
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() + geom_vline(xintercept = mean(movies$imdb_rating),color='red',linetype='dashed')
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean(movies$imdb_rating),color="red",linetype="dashed")
mean_ratings = mean(movies$imdb_rating)
mean_ratings
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.5,"Mean = 6.5")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.5,label="Mean = 6.5")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.4,label="Mean = 6.5")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.2,label="Mean = 6.5")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.3,label="Mean = 6.5")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.3,label="Mean = 6.5",color="red")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.3,label="Mean = 6.5",color="red",fontface="regular")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.3,label="Mean = 6.5",color="red",fontface="None")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.3,label="Mean = 6.5",color="red",fontface="bold")
movies %>% ggplot(aes(x=imdb_rating)) + geom_density() +
geom_vline(xintercept =mean_ratings,color="red",linetype="dashed") + geom_text(x=5,y=0.3,label="Mean = 6.5",color="red",family = "Times New Roman")
by_genre <- movies %>% group_by(genre) %>% summarise(mean_rating = mean(imdb_rating))
by_genre <- movies %>% group_by(genre) %>% summarise(mean_rating = mean(imdb_rating))
by_genre <- movies %>% group_by(genre) %>% summarise(mean_rating = mean(imdb_rating))
by_genre <- movies %>% group_by(genre)
by_genre
View(by_genre)
by_genre %>% summarise(mean_imdb_rating = mean(imdb_rating))
rating_by_genre <- by_genre %>% summarise(mean_imdb_rating = mean(imdb_rating))
View(rating_by_genre)
rating_by_genre %>% ggplot(aes(x=genre , y= mean_imdb_rating)) + geom_bar()
View(rating_by_genre)
rating_by_genre %>% ggplot(aes(x=genre , y= mean_imdb_rating)) + geom_count()
rating_by_genre %>% ggplot(aes(x=genre , y= mean_imdb_rating)) + geom_bar()
rating_by_genre %>% ggplot(aes(y= mean_imdb_rating)) + geom_bar()
rating_by_genre %>% ggplot(aes(y= mean_imdb_rating)) + geom_bar(stat = 'identity)
+ geom_bar(stat ='identity)
+ geom_bar(stat ="identity")
rating_by_genre %>% ggplot(aes(y= mean_imdb_rating)) + geom_bar(stat ="identity")
rating_by_genre %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity")
rating_by_genre %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% order_by(mean_imdb_rating) %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% order_by(order_by = mean_imdb_rating) %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% order_by(order_by = mean_imdb_rating)
rating_by_genre %>% order(order_by = mean_imdb_rating)
rating_by_genre %>% order(mean_imdb_rating)
rating_by_genre[order(mean_imdb_rating) ]
rating_by_genre[order(mean_imdb_rating)]
View(rating_by_genre)
rating_by_genre[order(-mean_imdb_rating)
rating_by_genre[order(-mean_imdb_rating)]
View(rating_by_genre)
rating_by_genre[order(-mean_imdb_rating)]
View(rating_by_genre)
rating_by_genre[order(rating_by_genre$mean_imdb_rating)]
rating_by_genre[order(-rating_by_genre$mean_imdb_rating)]
arrange(rating_by_genre,desc(mean_imdb_ratings))
arrange(rating_by_genre,desc(mean_imdb_rating))
arrange(rating_by_genre,desc(mean_imdb_rating)) %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre <- arrange(rating_by_genre,desc(mean_imdb_rating))
View(rating_by_genre)
View(rating_by_genre)
rating_by_genre %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% ggplot(aes(x=reorder(-mean_imdb_rating),y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% ggplot(aes(x=reorder(-mean_imdb_rating,genre),y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% ggplot(aes(x=reorder(genre),y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% ggplot(aes(x=reorder(-genre),y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
rating_by_genre <- arrange(rating_by_genre,desc(mean_imdb_rating))
rating_by_genre$genre <- factor(rating_by_genre$genre, levels = rating_by_genre$genre)
rating_by_genre %>% ggplot(aes(x=genre,y= mean_imdb_rating)) + geom_bar(stat ="identity") + theme(axis.text.x = element_text(angle = 90))
model_1_all <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box + director +actor1 + actor2 + actor3 + actor4 + actor5)
summary(model_1_all)
View(model_1_all)
summary(model_1_all)
model_2_no_actors <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box + director)
summary(model_2_no_actors)
model_3_ndic_nact <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box)
summary(model_3_ndic_nact)
View(model_1_all)
View(model_1_all)
View(movies)
model_2_no_director <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box + +actor1 + actor2 + actor3 + actor4 + actor5)
model_2_no_director <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box + +actor1 + actor2 + actor3 + actor4 + actor5)
summary(model_2_no_actors)
sum(is.na(movies$director))
sum(is.na(movies$actor1)) + sum(is.na(movies$actor2)) +sum(is.na(movies$actor3)) +
sum(is.na(movies$actor4)) + sum(is.na(movies$actor5))
oscars_actors <- is.na(movies$actor1) + is.na(movies$actor2) +is.na(movies$actor3) +
is.na(movies$actor4) + is.na(movies$actor5)
oscars_actors
is.na(movies$actor1)
~is.na(movies$actor1)
~is.na(movies$actor1)
!is.na(movies$actor1)
oscars_actors <- !is.na(movies$actor1) + !is.na(movies$actor2) + !is.na(movies$actor3) + !is.na(movies$actor4) + !is.na(movies$actor5)
oscars_actors
oscars_actors <- !is.na(movies$actor1) + !is.na(movies$actor2) + !is.na(movies$actor3) + !is.na(movies$actor4) + !is.na(movies$actor5)
oscars_actors
as.numeric(!is.na(movies$actor1))
oscars_actors <- as.numeric(!is.na(movies$actor1)) + as.numeric(!is.na(movies$actor2)) + as.numeric(!is.na(movies$actor3)) + as.numeric(!is.na(movies$actor4)) + as.numeric(!is.na(movies$actor5)) +
oscars_actors
oscars_actors <- as.numeric(!is.na(movies$actor1)) + as.numeric(!is.na(movies$actor2)) + as.numeric(!is.na(movies$actor3)) + as.numeric(!is.na(movies$actor4)) + as.numeric(!is.na(movies$actor5)) +
oscars_actors
oscars_actors <- as.numeric(!is.na(movies$actor1)) + as.numeric(!is.na(movies$actor2)) + as.numeric(!is.na(movies$actor3)) + as.numeric(!is.na(movies$actor4)) + as.numeric(!is.na(movies$actor5))
oscars_actors
movies$oscar_actors <- oscar_actors
movies$oscar_actors <- oscars_actors
length(unique(movies$director))
View(model_1_all)
View(model_1_all[["model"]])
model_1_all <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box + director +actor1 + actor2 + actor3 + actor4 + actor5)
summary(model_1_all)
summary(model_1_all)
sum(is.na(movies$director))
model_2_no_director <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box  +actor1 + actor2 + actor3 + actor4 + actor5)
summary(model_2_no_director)
movies$oscars_actors <- oscars_actors
model_featured_1 <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box + oscars_actors)
summary(model_featured)
summary(model_featured_1)
unique(movies$actor1)
unique(movies$actor1) + unique(movies$actor2)
length(c(movies$actor1,movies$actor2,movies$actor3,vmovies$actor4,movies$actor5))
length(c(movies$actor1,movies$actor2,movies$actor3,movies$actor4,movies$actor5))
length(unique(c(movies$actor1,movies$actor2,movies$actor3,movies$actor4,movies$actor5)))
length(unique(c(movies$actor1,movies$actor2,movies$actor3,movies$actor4,movies$actor5)))
unique(c(movies$actor1,movies$actor2,movies$actor3,movies$actor4,movies$actor5))
sort(unique(c(movies$actor1,movies$actor2,movies$actor3,movies$actor4,movies$actor5)))
model_3_actors_2 <- lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + thtr_rel_month + best_pic_nom + best_pic_win + best_actor_win + best_actress_win + best_dir_win + top200_box  +actor1 + actor2 )
summary(model_3_actors_2)
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + mpaa_rating + best_dir_win + top200_box  +actor1 + actor2 )
summary(model_4)
summary(model_4$coefficients)
model_4$coefficients
model_4$effects
summary(model_4)[1]
summary(model_4)[2]
summary(model_4)[3]
summary(model_4)[4]
summary(model_1_all)[4]
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + best_dir_win + top200_box  +actor1 + actor2 )
summary(model_4)[4]
summary(model_4)
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + best_dir_win +actor1 + actor2 )
summary(model_4)
View(movies)
movies$title == "Captain Fantastic "
sum(movies$title == "Captain Fantastic")
movies$best_dir_win
sum(movies$actor1 == "Amy Adams")
movies$actor1 == "Amy Adams"
sum(movies$actor1 == "Amy Adams",na.rm = TRUE)
sum(movies$actor2 == "Jake Gyllenhaal",na.rm = TRUE)
sum(movies$actor3 == "Jake Gyllenhaal",na.rm = TRUE)
sum(movies$actor4 == "Jake Gyllenhaal",na.rm = TRUE)
sum(movies$actor5 == "Jake Gyllenhaal",na.rm = TRUE)
sum(movies$actor5 %in% "Jake",na.rm = TRUE)
View(movies)
c(zbby = "Ahmad", koso = "Toto")
non_cul_animals
non_cul_animals <- c(actor1= "Amy Adams" , actor2 = NA , title_type = "Feature Film" , genre = "Drama" , runtime = 116 , best_dir_win = "yes")
non_cul_animals
predict.lm(model_4,non_cul_animals,interval = "confidence")
predict.lm(model_4,non_cul_animals)
predict.lm(object = model_4,newdata = non_cul_animals)
data.frame(non_cul_animals)
predict.lm(object = model_4,newdata = data.frame(non_cul_animals))
non_cul_animals <- (title_type = "Feature Film" , genre = "Drama" ,  runtime = 116 , best_dir_win = "yes" , actor1= "Amy Adams" , actor2 = NA)
non_cul_animals <- c(title_type = "Feature Film" , genre = "Drama" ,  runtime = 116 , best_dir_win = "yes" , actor1= "Amy Adams" , actor2 = NA)
non_cul_animals
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win" = "yes" , "actor1"= "Amy Adams" , "actor2 = NA")
non_cul_animals
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win" = "yes" , "actor1"= "Amy Adams" , "actor2" = NA")
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win" = "yes" , "actor1"= "Amy Adams" , "actor2" = NA)
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win"= "yes" , "actor1" = "Amy Adams" , "actor2" = NA)
non_cul_animals
predict.lm(object = model_4,newdata = non_cul_animals)
movies[is.na(movies$actor2)]
movies %>% filter(actor2 == NA)
sum(is.na(actor2))
sum(is.na(movies$actor2))
View(movies)
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win"= "yes" , "actor1" = "Amy Adams" , "actor2" = "NA")
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win"= "yes" , "actor1" = "Amy Adams" , "actor2" = "")
non_cul_animals
predict.lm(object = model_4,newdata = non_cul_animals)
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Drama" ,  "runtime" = 116 , "best_dir_win"= "yes" , "actor1" = "Amy Adams" , "actor2" = NA_character_)
non_cul_animals
predict.lm(object = model_4,newdata = non_cul_animals)
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + best_dir_win +actor1 + actor2 )
summary(model_4)
k <- predict.lm(object = model_4,newdata = non_cul_animals)
k
k <- predict.lm(object = model_4,newdata = non_cul_animals,interval = "confidence")
k
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Action & Adventure" ,  "runtime" = 108 , "best_dir_win"= "yes" , "actor1" = "Ryan Reynolds" , "actor2" = "Karan Soni")
non_cul_animals
k <- predict.lm(object = model_4,newdata = non_cul_animals,interval = "confidence")
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Action & Adventure" ,  "runtime" = 108 , "best_dir_win"= "yes" , "actor1" = "Ryan Reynolds" , "actor2" = NA_character_)
non_cul_animals
k <- predict.lm(object = model_4,newdata = non_cul_animals,interval = "confidence")
k
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + best_dir_win +actor1)
summary(model_4)
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Action & Adventure" ,  "runtime" = 132 , "best_dir_win"= "yes" , "actor1" = "Denzel Washington" , "actor2" = "Ethan Hawke" )
non_cul_animals
k <- predict.lm(object = model_4,newdata = non_cul_animals,interval = "confidence")
k
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + best_dir_win +actor1 +actor2)
summary(model_4)
k <- predict.lm(object = model_4,newdata = non_cul_animals,interval = "confidence")
k
model_4 <-lm(data = movies,imdb_rating ~ title_type + genre + runtime + best_dir_win +actor1 )
summary(model_4)
non_cul_animals <- data.frame("title_type" = "Feature Film" , "genre" = "Action & Adventure" ,  "runtime" = 132 , "best_dir_win"= "yes" , "actor1" = "Denzel Washington" , "actor2" = "Ethan Hawke" )
non_cul_animals
k <- predict.lm(object = model_4,newdata = non_cul_animals,interval = "confidence")
k
